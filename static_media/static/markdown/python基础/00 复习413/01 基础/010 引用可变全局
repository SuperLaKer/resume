#### 变量的引用

- 变量  和  数据 都是分开保存在内存中的
- 在python中，函数的 参数、返回值都是靠引用传递的

- 数据保存在内存中
- 变量保存 内存地址
- 变量保存数据地址的动作 = ，叫 引用

#### 赋值语句

```python
a = 1  # 从右往左，数据，引用，变量
b = a
a = 2
print(b)
```

#### 函数 参数

```python
def test(num):
	print(id(num))

a = 1
test(a)  # 传递的是引用
id(a) == test(a)  True

# 返回值也是引用
```

#### 不/可变类型

- 内存地址不变， 保存的数据可变
- `list  tuple`
- 清空 `list`和 `dict`地址也不变
- `dict的key只能是不可变类型：数值型，字符串，tuple`
- `unhashable`
- 
- 字典：key不可变类型， value都行
- 方法 和 =

- 某块内存（地址）中，保存的数据不能发送改变
- `数字类型  str  tuple`

#### 局部全局变量

- 其他语言不推荐使用全局变量

- python中

- 定义在所有函数的外部

- 使用` global_num = 10`， 并不能修改全局变量

- `global global_num`，修改全局变量

- 函数定义与全局变量定义，先后无所谓

- `g_, gl_` 命名规则

- 全局可变类型

- 

- 定义在某个函数内部--->闭包可以捕获局部变量

- 函数执行时创建，函数结束变量被回收

  

```
shebang		import		global		function	function()
```















